
#
plt.close()
plt.rcParams['figure.figsize']=[10, 10]
plt.yscale("log")
# fig, a = plt.subplots(1, 1)
# fig.subplots_adjust(hspace=0.25, wspace=0.25)
# plt.figure()
plt.plot(neural,  'o-', lw=1, ms = 5, label='Neural Multigrid')
plt.xlabel('iterations', fontsize=15)
plt.ylabel('residual', fontsize=15)
plt.plot(semigm, 's-', lw=1, ms = 5, label='SemiGM Multigrid',)
plt.grid(True, linestyle='--', color='k', alpha=0.3, lw = 1)
plt.title("Residual decreasing", fontsize = 28, pad = 10)
plt.tick_params(axis='both', which='major', labelsize=15)
plt.legend(fontsize=20)
# plt.savefig('../data/conv_HK.png', dpi=300)
plt.show()



plt.close()
plt.rcParams['figure.figsize']=[20, 9]

fig, a = plt.subplots(1,2)

a[0].set_yscale("log")
# fig, a = plt.subplots(1, 1)
# fig.subplots_adjust(hspace=0.25, wspace=0.25)
# plt.figure()
a[0].plot(neural,  'o-', lw=1, ms = 5, label='Neural Multigrid')
a[0].set_xlabel('iterations', fontsize=26)
a[0].set_ylabel('residual', fontsize=26)
a[0].plot(semigm, 's-', lw=1, ms = 5, label='SemiGM Multigrid',)
a[0].grid(True, linestyle='--', color='k', alpha=0.3, lw = 1)
a[0].set_title("Residual decreasing", fontsize = 35, pad = 12)
a[0].tick_params(axis='both', which='major', labelsize=15)
maj_tick_x = np.arange(0, 9, 2)
a[0].set_xticks(maj_tick_x)
# maj_tick_y = np.arange(10e-10, 10e02, 10e3)
maj_tick_y = np.array([1e-10, 1e-7, 1e-4,1e-1,1e2])
a[0].set_yticks(maj_tick_y)
a[0].legend(fontsize=20)

# fig, a = plt.subplots(1, 1)
# fig.subplots_adjust(hspace=0.25, wspace=0.25)
# plt.figure()
a[1].set_yscale("log")
a[1].plot(ne, pred,  'o-', lw=1, ms = 5, label='Through Predictions')
a[1].set_xlabel('dimension', fontsize=26)
a[1].set_ylabel('time', fontsize=26)
a[1].plot(ne, inter, 's-', lw=1, ms = 5, label='Through Intersections')
a[1].grid(True, linestyle='--', color='k', alpha=0.3, lw = 1)
a[1].set_title("Assembly CPU Time", fontsize = 35, pad = 12)
# ax.xaxis.get_offset_text().set_fontsize(24)
# maj_tick = np.arange(0, 20, 2)
# plt.xticks(maj_tick)
a[1].ticklabel_format(axis="x", style="sci", scilimits=(3,3))
a[1].tick_params(axis='both', which='major', labelsize=15)
maj_tick_x = np.arange(0,17e03,4e03)
a[1].set_xticks(maj_tick_x)
a[1].xaxis.get_offset_text().set_fontsize(15)
a[1].legend(fontsize=20)
# plt.savefig('../data/conv_HK.png', dpi=300)

plt.show()
